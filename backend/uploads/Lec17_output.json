{
    "nodes": [
        {
            "id": "1742331449674-Lec17",
            "level": 0,
            "content": "(No description)",
            "font_size": 100,
            "is_underlined": false
        },
        {
            "id": "RTL Design",
            "level": 1,
            "content": "A.  Sahu Dept of Comp. Sc. & Engg. Indian Institute of Technology Guwahati http://jatinga.iitg.ac.in/~asahu/cs221/ 1",
            "font_size": 44.040000915527344,
            "is_underlined": false
        },
        {
            "id": "Announcement",
            "level": 1,
            "content": "(No description)",
            "font_size": 44.040000915527344,
            "is_underlined": false
        },
        {
            "id": "•  Quiz on Friday : 8AM to 9AM",
            "level": 2,
            "content": "(No description)",
            "font_size": 32.040000915527344,
            "is_underlined": false
        },
        {
            "id": "•  Syllabus : topic covered upto 22 nd   Oct Lecture",
            "level": 2,
            "content": "(No description)",
            "font_size": 32.040000915527344,
            "is_underlined": false
        },
        {
            "id": "–  Basic latch, FF, reg, ctr, mem",
            "level": 3,
            "content": "(No description)",
            "font_size": 27.959999084472656,
            "is_underlined": false
        },
        {
            "id": "–  FSM based design and Implementation, FSM",
            "level": 3,
            "content": "(No description)",
            "font_size": 27.959999084472656,
            "is_underlined": false
        },
        {
            "id": "completeness and Correctness",
            "level": 3,
            "content": "(No description)",
            "font_size": 27.959999084472656,
            "is_underlined": false
        },
        {
            "id": "–  FSM Optimization: RM and Partitioning method",
            "level": 3,
            "content": "(No description)",
            "font_size": 27.983999252319336,
            "is_underlined": false
        },
        {
            "id": "•  Venue : 4201, 4202, 4204, 4205",
            "level": 2,
            "content": "(No description)",
            "font_size": 32.040000915527344,
            "is_underlined": false
        },
        {
            "id": "Outline",
            "level": 2,
            "content": "•  Simple ASM Examples •  Data Path : R2, R2 and R3 •  CP+DP: Mod 14 counter •  Classic Example : Sequential Multiplier •  Verilog Code for Multiplier •  FPGA: Introduction 3",
            "font_size": 32.040000915527344,
            "is_underlined": false
        },
        {
            "id": "ASM charts : 3 Elements used",
            "level": 1,
            "content": "Output signals Or actions (Moore Type) Conditional Expression State name 0 (False) Conditional Outputs Or action (Mealy Type) 1 (True) (a) State box (b) Decision box (c) Conditional output box",
            "font_size": 44.040000915527344,
            "is_underlined": false
        },
        {
            "id": "Another Example: Ex 9",
            "level": 1,
            "content": "(No description)",
            "font_size": 44.040000915527344,
            "is_underlined": false
        },
        {
            "id": "ASM Design Example",
            "level": 3,
            "content": "0",
            "font_size": 42.959999084472656,
            "is_underlined": false
        },
        {
            "id": "A",
            "level": 3,
            "content": "(No description)",
            "font_size": 27.959999084472656,
            "is_underlined": false
        },
        {
            "id": "B",
            "level": 3,
            "content": "(No description)",
            "font_size": 27.983999252319336,
            "is_underlined": false
        },
        {
            "id": "X",
            "level": 5,
            "content": "Z = 1",
            "font_size": 32.040000915527344,
            "is_underlined": false
        },
        {
            "id": "Y",
            "level": 5,
            "content": "1 1 0",
            "font_size": 32.040000915527344,
            "is_underlined": false
        },
        {
            "id": "Another Example : Ex 10",
            "level": 1,
            "content": "9",
            "font_size": 44.040000915527344,
            "is_underlined": false
        },
        {
            "id": "Another Example: From FSM",
            "level": 2,
            "content": "(No description)",
            "font_size": 39.959999084472656,
            "is_underlined": false
        },
        {
            "id": "to ASM",
            "level": 2,
            "content": "Inputs",
            "font_size": 39.959999084472656,
            "is_underlined": false
        },
        {
            "id": "C",
            "level": 3,
            "content": "(No description)",
            "font_size": 27.983999252319336,
            "is_underlined": false
        },
        {
            "id": "S = 0",
            "level": 3,
            "content": "(No description)",
            "font_size": 27.983999252319336,
            "is_underlined": false
        },
        {
            "id": "S = 1",
            "level": 4,
            "content": "(No description)",
            "font_size": 27.959999084472656,
            "is_underlined": false
        },
        {
            "id": "Z = 0",
            "level": 4,
            "content": "(No description)",
            "font_size": 27.959999084472656,
            "is_underlined": false
        },
        {
            "id": "Z = 1",
            "level": 3,
            "content": "Similar to the ASM of : Sum of First N odd numbers If S =1, Start the Sum Process, initialize N, I=1 Sum Process: S= S+I, N=N-1, I =i+2 If N=0 Stop   //Flag Z 10 A 00 S 0 1 B C 01 10 Z 0 1",
            "font_size": 27.983999252319336,
            "is_underlined": false
        },
        {
            "id": "Another Example: From FSM to ASM",
            "level": 3,
            "content": "A B C S = 0 S = 1 Z = 0 Z = 1 If S =1, Start the Sum Process, initialize N Sum Process: S= S+I, N=N-1 If N=0 Stop   //Flag Z",
            "font_size": 36.959999084472656,
            "is_underlined": false
        },
        {
            "id": "ASM Block",
            "level": 1,
            "content": "(No description)",
            "font_size": 44.040000915527344,
            "is_underlined": false
        },
        {
            "id": "ASM Blocks",
            "level": 1,
            "content": "IDLE AVAIL START R ← R + 1 R  ← 0 Q0 0 1 MUL0 MUL1 ASM BLOCK Entry Exit Exit Exit One ASM block execute in one cycle",
            "font_size": 44.040000915527344,
            "is_underlined": false
        },
        {
            "id": "ASM Timing",
            "level": 1,
            "content": "•  Outputs appear while in the state •  Register transfers occur at the clock while exiting the state - New value occur in the next state! Clock cycle 1 Clock cycle 2 Clock cycle 3 Clock START Q 1 AVAIL IDLE MUL 1 0034 0000 State A Q 0",
            "font_size": 48.0,
            "is_underlined": false
        },
        {
            "id": "Another Example : Ex 11",
            "level": 2,
            "content": "15 •  Find the Data Path and ASM for the following problem:",
            "font_size": 44.040000915527344,
            "is_underlined": false
        },
        {
            "id": "–  We  first  need to load two registers (R1, R2) with",
            "level": 3,
            "content": "some value.",
            "font_size": 27.959999084472656,
            "is_underlined": false
        },
        {
            "id": "–  We will  then  need to add the two Registers (R1, R2)",
            "level": 3,
            "content": "and save the result in Register R3.",
            "font_size": 27.983999252319336,
            "is_underlined": false
        },
        {
            "id": "–  All these operations  should occur if  a “ start ” Signal",
            "level": 3,
            "content": "is activated.",
            "font_size": 27.983999252319336,
            "is_underlined": false
        },
        {
            "id": "ASM : DP+CP Example",
            "level": 3,
            "content": "(No description)",
            "font_size": 32.06399917602539,
            "is_underlined": false
        },
        {
            "id": "– If the “ start ” signal is set to 0, I do nothing",
            "level": 2,
            "content": "(No description)",
            "font_size": 32.040000915527344,
            "is_underlined": false
        },
        {
            "id": "– Else If the “ start ” signal is set to 1, I will  load",
            "level": 2,
            "content": "R1, R2 with values – Next, enable R3 to be loaded (load-2)by the results of R1+R2",
            "font_size": 32.06399917602539,
            "is_underlined": true
        },
        {
            "id": "–  start  is an input signal (Use a switch)",
            "level": 3,
            "content": "(No description)",
            "font_size": 30.0,
            "is_underlined": false
        },
        {
            "id": "–  clear  is an output signal generated and connected",
            "level": 3,
            "content": "to R1, R2, R3 –",
            "font_size": 30.0,
            "is_underlined": true
        },
        {
            "id": "load",
            "level": 3,
            "content": "(No description)",
            "font_size": 30.02400016784668,
            "is_underlined": true
        },
        {
            "id": "-",
            "level": 3,
            "content": "(No description)",
            "font_size": 30.02400016784668,
            "is_underlined": true
        },
        {
            "id": "1  is an output signal generated and",
            "level": 3,
            "content": "connected to R1, R2",
            "font_size": 30.02400016784668,
            "is_underlined": true
        },
        {
            "id": "–  load-2  is an output signal generated and",
            "level": 3,
            "content": "connected to R3",
            "font_size": 30.02400016784668,
            "is_underlined": true
        },
        {
            "id": "Data Path",
            "level": 3,
            "content": "A3 A2 A1 A0 F E Clr_E Set_E Set_F Clear_A_F incr_A A2 A3 Start Clock Reset",
            "font_size": 27.959999084472656,
            "is_underlined": false
        },
        {
            "id": "00",
            "level": 3,
            "content": "(No description)",
            "font_size": 27.959999084472656,
            "is_underlined": false
        },
        {
            "id": "S",
            "level": 3,
            "content": "(No description)",
            "font_size": 27.983999252319336,
            "is_underlined": false
        },
        {
            "id": "0",
            "level": 4,
            "content": "(No description)",
            "font_size": 27.959999084472656,
            "is_underlined": false
        },
        {
            "id": "1",
            "level": 4,
            "content": "(No description)",
            "font_size": 27.959999084472656,
            "is_underlined": false
        },
        {
            "id": "01",
            "level": 3,
            "content": "(No description)",
            "font_size": 27.983999252319336,
            "is_underlined": false
        },
        {
            "id": "10",
            "level": 4,
            "content": "20",
            "font_size": 27.959999084472656,
            "is_underlined": false
        },
        {
            "id": "Controller",
            "level": 4,
            "content": "PS S NS 0 0 0 0 0 0 0 1 0 1 0 1 X 1 0 1 0 X 0 0 1 1 X 0 0 PS CLR L1 L2 0 0 1 0 0 0 1 0 1 0 1 0 0 0 1 1 1 X X X D1=Q1’.Q0      D2=S.Q1’.Q0’ CLR=Q1’.Q0’   L1=Q0’.Q1    L2=Q1.Q0’ 21",
            "font_size": 32.040000915527344,
            "is_underlined": false
        },
        {
            "id": "ASM Charts: An Complete Example",
            "level": 3,
            "content": "(No description)",
            "font_size": 39.959999084472656,
            "is_underlined": false
        },
        {
            "id": "Ref: Mano  Book",
            "level": 3,
            "content": "(No description)",
            "font_size": 39.98400115966797,
            "is_underlined": false
        },
        {
            "id": "Ex 12: The Dozen th   One",
            "level": 4,
            "content": "(No description)",
            "font_size": 39.959999084472656,
            "is_underlined": false
        },
        {
            "id": "ASM Charts: An Example",
            "level": 1,
            "content": "(No description)",
            "font_size": 44.06399917602539,
            "is_underlined": false
        },
        {
            "id": "Mod 14 counter:",
            "level": 2,
            "content": "•  There is a 4 bit counter (A) •  E specify: less than 12 10  or less than 4 10 •  EF=11 specify : value =12 10 , –  It time to reset after next counting •  E depends of A 2 , F depends on A 3  and A 2 If A 2 =1   E=1, else E=0 A 3 A 2 =1,   F =1,  counter reset",
            "font_size": 27.0,
            "is_underlined": false
        },
        {
            "id": "AMS DP+CP : to be High Level",
            "level": 2,
            "content": "24 Controller",
            "font_size": 44.040000915527344,
            "is_underlined": false
        },
        {
            "id": "ASM Charts:  An Example",
            "level": 1,
            "content": "•  A is a register; •  A i  stands for i th   bit of the A register. A = A 3 A 2 A 1 A 0 •  E and F are single-bit flip- flops. Initial State S A ← 0; F ←0 A ← A+1 A 2 E ← 0 E ← 1 A 3 F ←1 0 0 0 1 1 1 T 2 T 1 T 0",
            "font_size": 44.06399917602539,
            "is_underlined": false
        },
        {
            "id": "Timing in ASM Charts",
            "level": 2,
            "content": "•  Operations of ASM can be illustrated through a timing diagram. •  Two factors which must be considered are –  Operations in an ASM block occur at the same time in",
            "font_size": 44.040000915527344,
            "is_underlined": false
        },
        {
            "id": "–  Operations in an  ASM block  occur at the same",
            "level": 3,
            "content": "(No description)",
            "font_size": 30.0,
            "is_underlined": false
        },
        {
            "id": "time in  one clock cycle",
            "level": 3,
            "content": "–  Decision boxes are dependent on the status of",
            "font_size": 30.0,
            "is_underlined": false
        },
        {
            "id": "the  previous clock cycle  (that is, they do not",
            "level": 3,
            "content": "depend on operations of current block)",
            "font_size": 30.0,
            "is_underlined": false
        },
        {
            "id": "3 ASM blocks",
            "level": 4,
            "content": "Initial state S A   0, F   0 A   A + 1 E   0 E   1 F   1 0 0 0 1 1 1 T 2 T 1 T 0 A 2 A 3",
            "font_size": 32.06399917602539,
            "is_underlined": false
        },
        {
            "id": "one clock cycle",
            "level": 3,
            "content": "–  Decision boxes are dependent on the status of the",
            "font_size": 26.040000915527344,
            "is_underlined": false
        },
        {
            "id": "previous clock cycle  (that is, they do not depend on",
            "level": 3,
            "content": "operations of current block)",
            "font_size": 26.040000915527344,
            "is_underlined": false
        },
        {
            "id": "Timing in ASM  Charts",
            "level": 3,
            "content": "CTR E, F Conditions State 0000 1,0 A 2 =0,A 3 =0 T1 0001 0,0 -- -- 0010 0,0 --- -- 0011 0,0 --- -- 0100 0,0 A 2 =1,A 3 =0 -- 0101 1,0 -- -- 0110 1,0 -- -- 0111 1,0 -- -- 1000 1,0 A 2 =0,A 3 =1 -- 1001 0,0 -- -- 1010 0,0 -- -- 1011 0,0 -- -- 1100 0,0 A 2 =1,A 3 =1 -- 1101 1,0 T2 1101 1,1 T0 Initial State S A ← 0; F ←0 A ← A+1 A 2 E ← 0 E ← 1 A 3 F ←1 0 0 0 1 1 1 T 2 T 1 T 0",
            "font_size": 39.959999084472656,
            "is_underlined": false
        },
        {
            "id": "ASM Chart => Digital System",
            "level": 2,
            "content": "•  ASM chart describes a digital system.  From ASM chart, we may obtain: –  Controller logic (via State Table/Diagram) –  Architecture/Data Processor",
            "font_size": 44.040000915527344,
            "is_underlined": false
        },
        {
            "id": "1.  Design of controller is determined",
            "level": 3,
            "content": "–  from the decision boxes and the required state transitions.",
            "font_size": 36.02399826049805,
            "is_underlined": false
        },
        {
            "id": "2.  Design requirements of data processor",
            "level": 3,
            "content": "–  can be obtained from the operations specified with the state and conditional boxes.",
            "font_size": 36.02399826049805,
            "is_underlined": false
        },
        {
            "id": "ASM Chart to Controller",
            "level": 1,
            "content": "T 0 T 1 T 2",
            "font_size": 44.06399917602539,
            "is_underlined": false
        },
        {
            "id": "Assign codes to states:",
            "level": 2,
            "content": "T 0  = 00 T 1  = 01 T 2  = 11 Present state inputs Next state outputs G 1  G 0 S A 2  A 3  G 1 +  G 0 +  T 0  T 1  T 2 0 0 0 X X 0 0 1 0 0 0 0 1 X X 0 1 1 0 0 0 1 X 0 X 0 1 0 1 0 0 1 X 1 0 0 1 0 1 0 0 1 X 1 1 1 1 0 1 0 1 1 X X X 0 0 0 0 1 Inputs from conditions in decision boxes. Outputs = present state of controller. Initial State S A ← 0; F ←0 A ← A+1 A 2 E ← 0 E ← 1 A 3 F ←1 0 0 0 1 1 1 T 2 T 1 T 0",
            "font_size": 15.960000038146973,
            "is_underlined": false
        },
        {
            "id": "ASM Chart to  Architecture/Data Processor",
            "level": 2,
            "content": "•  Architecture is more difficult to design than controller. •  Nevertheless, it can be deduced from the ASM chart.  In particular, the OPS from the ASM chart determine: –  What registers to use? –  How they can be connected? –  What operations to support? –  How these operations are activated? •  Guidelines: –  Always use high-level units –  Simplest architecture possible",
            "font_size": 36.0,
            "is_underlined": false
        },
        {
            "id": "ASM Chart to Architecture/Data Processor",
            "level": 2,
            "content": "(No description)",
            "font_size": 36.02399826049805,
            "is_underlined": false
        },
        {
            "id": "•  Various OPS are:",
            "level": 3,
            "content": "–  Counter incremented (A   A + 1) when state = T 1 . –  Counter cleared (A   0) when state = T 0  and S = 1. –  E is set (E   1) when state = T 1  and A 2  = 1. –  E is cleared (E   0) when state = T 1  and A 2  = 0. –  F is set (F   0) when state = T 2 . –  F is cleared (F   0) when state = T 0  and S = 1.",
            "font_size": 33.599998474121094,
            "is_underlined": false
        },
        {
            "id": "•  Deduce Data Path:",
            "level": 3,
            "content": "–  One 4-bit register A (e.g.: 4-bit synchronous counter with clear/increment). –  Two flip-flops needed for E and F (e.g.: JK/D flip-flops).",
            "font_size": 33.599998474121094,
            "is_underlined": false
        },
        {
            "id": "ASM Chart => Architecture/Data Processor",
            "level": 3,
            "content": "Controller K J Q K J Q Clk 4 bit Counter A Synchronous A 2 A 2 A 3 A 3 start S E F clock CP count clear T 2 T 1 T 0 A   A + 1 @ T 1 F   0;A   0 @T 0  and S = 1 E   1 @T 1  and A 2  = 1",
            "font_size": 36.0,
            "is_underlined": false
        },
        {
            "id": "Thanks",
            "level": 1,
            "content": "36",
            "font_size": 59.06399917602539,
            "is_underlined": false
        }
    ],
    "edges": [
        {
            "from": "1742331449674-Lec17",
            "to": "RTL Design"
        },
        {
            "from": "1742331449674-Lec17",
            "to": "Announcement"
        },
        {
            "from": "1742331449674-Lec17",
            "to": "ASM charts : 3 Elements used"
        },
        {
            "from": "1742331449674-Lec17",
            "to": "Another Example: Ex 9"
        },
        {
            "from": "1742331449674-Lec17",
            "to": "Another Example : Ex 10"
        },
        {
            "from": "1742331449674-Lec17",
            "to": "ASM Block"
        },
        {
            "from": "1742331449674-Lec17",
            "to": "ASM Blocks"
        },
        {
            "from": "1742331449674-Lec17",
            "to": "ASM Timing"
        },
        {
            "from": "1742331449674-Lec17",
            "to": "ASM : DP+CP Example"
        },
        {
            "from": "1742331449674-Lec17",
            "to": "Data Path"
        },
        {
            "from": "1742331449674-Lec17",
            "to": "ASM Charts: An Example"
        },
        {
            "from": "1742331449674-Lec17",
            "to": "ASM Charts:  An Example"
        },
        {
            "from": "1742331449674-Lec17",
            "to": "ASM Chart to Controller"
        },
        {
            "from": "1742331449674-Lec17",
            "to": "Thanks"
        },
        {
            "from": "Announcement",
            "to": "•  Quiz on Friday : 8AM to 9AM"
        },
        {
            "from": "Announcement",
            "to": "•  Syllabus : topic covered upto 22 nd   Oct Lecture"
        },
        {
            "from": "Announcement",
            "to": "•  Venue : 4201, 4202, 4204, 4205"
        },
        {
            "from": "Announcement",
            "to": "Outline"
        },
        {
            "from": "•  Syllabus : topic covered upto 22 nd   Oct Lecture",
            "to": "–  Basic latch, FF, reg, ctr, mem"
        },
        {
            "from": "•  Syllabus : topic covered upto 22 nd   Oct Lecture",
            "to": "–  FSM based design and Implementation, FSM"
        },
        {
            "from": "•  Syllabus : topic covered upto 22 nd   Oct Lecture",
            "to": "completeness and Correctness"
        },
        {
            "from": "•  Syllabus : topic covered upto 22 nd   Oct Lecture",
            "to": "–  FSM Optimization: RM and Partitioning method"
        },
        {
            "from": "Another Example: Ex 9",
            "to": "ASM Design Example"
        },
        {
            "from": "ASM Design Example",
            "to": "ASM Design Example"
        },
        {
            "from": "ASM Design Example",
            "to": "A"
        },
        {
            "from": "ASM Design Example",
            "to": "B"
        },
        {
            "from": "B",
            "to": "X"
        },
        {
            "from": "B",
            "to": "Y"
        },
        {
            "from": "Another Example : Ex 10",
            "to": "Another Example: From FSM"
        },
        {
            "from": "Another Example : Ex 10",
            "to": "to ASM"
        },
        {
            "from": "to ASM",
            "to": "A"
        },
        {
            "from": "to ASM",
            "to": "B"
        },
        {
            "from": "to ASM",
            "to": "C"
        },
        {
            "from": "to ASM",
            "to": "S = 0"
        },
        {
            "from": "to ASM",
            "to": "Z = 1"
        },
        {
            "from": "to ASM",
            "to": "Another Example: From FSM to ASM"
        },
        {
            "from": "S = 0",
            "to": "S = 1"
        },
        {
            "from": "S = 0",
            "to": "Z = 0"
        },
        {
            "from": "ASM Timing",
            "to": "Another Example : Ex 11"
        },
        {
            "from": "Another Example : Ex 11",
            "to": "–  We  first  need to load two registers (R1, R2) with"
        },
        {
            "from": "Another Example : Ex 11",
            "to": "–  We will  then  need to add the two Registers (R1, R2)"
        },
        {
            "from": "Another Example : Ex 11",
            "to": "–  All these operations  should occur if  a “ start ” Signal"
        },
        {
            "from": "ASM : DP+CP Example",
            "to": "– If the “ start ” signal is set to 0, I do nothing"
        },
        {
            "from": "ASM : DP+CP Example",
            "to": "– Else If the “ start ” signal is set to 1, I will  load"
        },
        {
            "from": "ASM : DP+CP Example",
            "to": "ASM : DP+CP Example"
        },
        {
            "from": "ASM : DP+CP Example",
            "to": "–  start  is an input signal (Use a switch)"
        },
        {
            "from": "ASM : DP+CP Example",
            "to": "–  clear  is an output signal generated and connected"
        },
        {
            "from": "ASM : DP+CP Example",
            "to": "load"
        },
        {
            "from": "ASM : DP+CP Example",
            "to": "-"
        },
        {
            "from": "ASM : DP+CP Example",
            "to": "1  is an output signal generated and"
        },
        {
            "from": "ASM : DP+CP Example",
            "to": "–  load-2  is an output signal generated and"
        },
        {
            "from": "ASM : DP+CP Example",
            "to": "A"
        },
        {
            "from": "ASM : DP+CP Example",
            "to": "00"
        },
        {
            "from": "ASM : DP+CP Example",
            "to": "S"
        },
        {
            "from": "ASM : DP+CP Example",
            "to": "B"
        },
        {
            "from": "ASM : DP+CP Example",
            "to": "C"
        },
        {
            "from": "ASM : DP+CP Example",
            "to": "01"
        },
        {
            "from": "ASM : DP+CP Example",
            "to": "Controller"
        },
        {
            "from": "Data Path",
            "to": "ASM : DP+CP Example"
        },
        {
            "from": "Data Path",
            "to": "Data Path"
        },
        {
            "from": "Data Path",
            "to": "ASM Charts: An Complete Example"
        },
        {
            "from": "Data Path",
            "to": "Ref: Mano  Book"
        },
        {
            "from": "S",
            "to": "0"
        },
        {
            "from": "S",
            "to": "1"
        },
        {
            "from": "01",
            "to": "10"
        },
        {
            "from": "Ref: Mano  Book",
            "to": "Ex 12: The Dozen th   One"
        },
        {
            "from": "ASM Charts: An Example",
            "to": "Mod 14 counter:"
        },
        {
            "from": "ASM Charts: An Example",
            "to": "AMS DP+CP : to be High Level"
        },
        {
            "from": "AMS DP+CP : to be High Level",
            "to": "Data Path"
        },
        {
            "from": "ASM Charts:  An Example",
            "to": "Timing in ASM Charts"
        },
        {
            "from": "ASM Charts:  An Example",
            "to": "ASM Chart => Digital System"
        },
        {
            "from": "ASM Charts:  An Example",
            "to": "ASM Chart to Controller"
        },
        {
            "from": "Timing in ASM Charts",
            "to": "–  Operations in an  ASM block  occur at the same"
        },
        {
            "from": "Timing in ASM Charts",
            "to": "time in  one clock cycle"
        },
        {
            "from": "Timing in ASM Charts",
            "to": "the  previous clock cycle  (that is, they do not"
        },
        {
            "from": "Timing in ASM Charts",
            "to": "Timing in ASM Charts"
        },
        {
            "from": "Timing in ASM Charts",
            "to": "3 ASM blocks"
        },
        {
            "from": "Timing in ASM Charts",
            "to": "one clock cycle"
        },
        {
            "from": "Timing in ASM Charts",
            "to": "previous clock cycle  (that is, they do not depend on"
        },
        {
            "from": "Timing in ASM Charts",
            "to": "Timing in ASM  Charts"
        },
        {
            "from": "ASM Chart => Digital System",
            "to": "1.  Design of controller is determined"
        },
        {
            "from": "ASM Chart => Digital System",
            "to": "2.  Design requirements of data processor"
        },
        {
            "from": "ASM Chart to Controller",
            "to": "Assign codes to states:"
        },
        {
            "from": "ASM Chart to Controller",
            "to": "ASM Chart to  Architecture/Data Processor"
        },
        {
            "from": "ASM Chart to Controller",
            "to": "ASM Chart to Architecture/Data Processor"
        },
        {
            "from": "ASM Chart to Architecture/Data Processor",
            "to": "•  Various OPS are:"
        },
        {
            "from": "ASM Chart to Architecture/Data Processor",
            "to": "•  Deduce Data Path:"
        },
        {
            "from": "ASM Chart to Architecture/Data Processor",
            "to": "ASM Chart => Architecture/Data Processor"
        }
    ]
}